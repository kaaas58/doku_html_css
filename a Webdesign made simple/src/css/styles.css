/* === FARBEN ==== */

/* colors old 
blue:       #1F4E8C
dGrau:      #3D3F45
lGrau       #E5E5E5
red:        #A62C21
*/

/* => skalieren vs responsive
skalieren: 
heisst die Objekte verändern die Größe 
mit wenn das Fenster die Größe verändert.
responsive:
es ändert sich beim verändern der Größe 
des Fensters des Layout des Inhates. */

/* Variables */
:root{
    --c-white: #FFF;
    --c-lGray: #E5E5E5;
    --c-dGray: #3D3F45;
    --c-blue: #1F4E8C;
    --c-sRed: #F00;
    --c-red: #A62C21;
}

/* === GLOBAL === */

html{
font-size: 16px;
}

body{
    margin: 0;
    font-family: 'Raleway', 'Lato', 'Helvetica Neue', 'Arial', sans-serif;
}

* { 
    box-sizing: border-box;
}

/* === GENERELLES === KANN AUF ALLEN SEITEN GENUTZT WERDEN */

.clearfix::after{
    content: "";
    display: block;
    clear: both;
}

.active{
background-color: var(--c-sRed) !important;
}

.wichtiger-text{
    font-weight: bold;
}

.screenreader{
    display: none;
}

.btn-typ-1{
    background-color: var(--c-sRed);
    border: 2px solid var(--c-sRed);
    border-radius: 3px;
    color: #FFF;
    margin: .4rem .6rem;
}

/* === NAVIGATIONSLEISTE === */

.header-nav{
    width: 100%;
    height: 45px;
    background-color: var(--c-dGray);
    position: relative;
    font-weight: bold;
    font-size: 1rem;
}

.header-nav a > img{
    height: 30px;
    width: auto;
    margin: .4rem;
    float: left;
}


.header-nav ul{
    margin: 0;
    padding: 0;
    float: right;
    height: 100%;
}

.header-nav ul > li{
    display: inline-block;
    height: 100%;
    padding: 0 .4rem 0 .4rem;
    
}

.header-nav ul > li > a{
    margin-top: .8rem;
    display: inline-block;
}

.header-nav ul > li > a:link{
    color: var(--c-white);
    text-decoration: none;
}

.header-nav ul > li > a:hover{
    color: var(--c-lGray);
    text-decoration: none;
}

.header-nav ul > li > a:active{
    color: var(--c-lGray);
    text-decoration: none;
}
.header-nav ul > li > a:visited{
    color: var(--c-white);
    text-decoration: none;
}

.header-nav .col-6{
    padding-top: 0;
    padding-bottom: 0;
}

.header-nav .container,
.header-nav .row,
.header-nav .col-6{
    height: 100%;
}




/* === NAVIGATIONSLEISTE (MOBIL) === */

.mobile-nav-button{
    color: #FFF;
    float: right;
    font-size: 2rem;
    border: 1px solid #fff;
    width: 35px;
    height: 35px;
    border-radius: 7px;
    position: relative;
    margin-top: .3rem;
    margin-bottom: .3rem;    
}

.mobile-nav-button > span{
    position: absolute;
    bottom: -3px;
    left: 7.4px;
}

.mobile-nav-content > ul > li{
    display: block;
    background-color: var(--c-dGray);
    height: 50px;
    padding: 0 1.2rem;
    text-align: center;
}

.mobile-nav-dropdown{
    position: relative;
    display: inline-block;
    float: right;
}

.mobile-nav-content{
    position: absolute;
    right: 0;
    top: 45px;
    display: none;
}

.mobile-nav-dropdown:hover > .mobile-nav-content{
    display: block;
}


/* Selektoren mit Kindselektor dind in der Hirachie wertiger als 
unspezifissche, welche eine nur eine Klasse selektiert ohne Kind..
Sonst, wenn Selektoren gleichwertig sind, 
zählt der letzte der gleichwertigen sellektoren im Code.  

Wenn wir die Hirachie einfach umgehen wollen bekommt der niedriger
wertige Selektor ein (!important) am Ende des auszuführenden Codes
{........!importent}. Kein Selektor kann !important überschreiben.
*/

.mobile-nav{
    display: none;
}

@media (max-width: 768px){
    .desktop-nav{
        display: none;
    }
    .mobile-nav{
        display: block;
    }
}

/* === HEADER-BANNER === */

.header-banner{
    background: url(../img/hintergrund.jpg) no-repeat;
    width: 100%;
    height: 0;                 /*   height hilft nicht, bei auto geht es auf 0, da height
    mit 0 nichts anfangen kann und da bei einem festen Wert 
    in px das Bild in der Höhe nicht mitskaliert, setze ich 
    height auf 0 und regel das Über das padding-top Element. 
    padding-top bezieht sich auf die Höhe. Da sie aber in 
                                    Prozent angegeben wird bezieht sie sich auf die Breite. 
                                    Bzw. ist von dießer abhängig. Somit ist die Höhe wieder skalierbar*/

                                    /* Da das Bild eine Auflößung von 1920px*400px aufweisst, 
                                    rechne wir 400/1920*100 = 20.8 % */
    padding-top: 20.83%;
    background-size: contain;   /*  Hintergrundbild passt sich an die Größe des Elemnts an in dem es sich befindet. */
}

.header-banner-klein{
    background: url(../img/hintergrund-klein.jpg) no-repeat;
    width: 100%;
    height: 0;                 /*   height hilft nicht, bei auto geht es auf 0, da height
                                    mit 0 nichts anfangen kann und da bei einem festen Wert 
                                    in px das Bild in der Höhe nicht mitskaliert, setze ich 
                                    height auf 0 und regel das Über das padding-top Element. 
                                    padding-top bezieht sich auf die Höhe. Da sie aber in 
                                    Prozent angegeben wird bezieht sie sich auf die Breite. 
                                    Bzw. ist von dießer abhängig. Somit ist die Höhe wieder skalierbar*/

                                    /* Da das Bild eine Auflößung von 1920px*400px aufweisst, 
                                    rechne wir 400/1920*100 = 20.8 % */
    padding-top: 15.625%;
    background-size: contain;   /*  Hintergrundbild passt sich an die Größe des Elemnts an in dem es sich befindet. */
}

/* === NEWSLETTER-BEREICH === */

.newsletter-bereich{
    width: 100%;
    background-color: var(--c-dGray);
}

#nb-werbetext{
    color: #FFF;
    font-size: 1.2rem;
}

#nb-form{
    width: 100%;
    margin-top: .4rem;
    float: right;
    text-align: right;
}

.nb-email-input{
    width: 78%;
    height: 35px; 
    border: 2px solid #fff;
    padding: .4rem .4rem;

}

#nb-btn{
    height: 35px;
}



/* ---------------------------------------- === Grid-System (SICHTABRKEIT) === */


/* (.border) steht für die Klasse boreder und nach dem , 
das (.border *) steht für alle eingeschlossenen Elemente 
in dem Element mit der Klasse(.border)

    <div class="container border">
        /////////
        /////////
        /////////
        /////////
    </div> */

/* .border, .border *{
    border: 1px solid #ff0101;
}

[class*="col-"]{
    background-color: #bfddff;
}

p{
    background-color: #91c4ff;
    padding: 0;
    margin: 0;
    color: #ff0000;
    text-align: center;
} */


/* ---------------------------------------------- === Grid-System === */


.container{
    width: 95%;
    margin-left: auto;
    margin-right: auto;
}

.row::after{
    content: "";
    clear: both;
    display: block;
}

[class*='col-']{
    float: left;
    min-height: 1px;
    padding: .8rem;
}

/* default -> over 1024px */

.col-1{width: 16.666%;  }
.col-2{width: 33.333%;  }
.col-3{width: 50%;      }
.col-4{width: 66.666;   }
.col-6{width: 100%;     }

/* 
=== WICHTIGE BREAKPOINTS ===

480     Pixel   (iPhone Querformat)
768     Pixel   (iPad Hochformat)
1024    Pixel   (iPad Querformat) */


/* Regel schalten nicht inclusive z.b. bis480 px oder gleich 480px */
@media (max-width: 1024px){
    
    .col-1{width: 33.333%;}
}

@media (max-width: 768px){

    .col-1{width: 50%;}
    .col-2{width: 100%;}
    .col-3{width: 100%;}
    .col-4{width: 100%;}
}

@media (max-width: 480px){
    
    .col-1{width: 100%;}
    .col-2{width: 100%;}
    .col-3{width: 100%;}
    .col-4{width: 100%;}
}